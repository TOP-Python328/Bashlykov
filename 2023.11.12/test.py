import data
from university import Contact, Person, Employee, Teacher, Administrator, Student, Gradebook, GradeRecord, OrganizationLevel, Group, Auditorium, Faculty, Department, University, HR


contact = Contact('2299100', 'Космонавтов2А', 'main@ugntu.ru',)

student_chief_с42 = Student(data.C42[1][0], data.C42[1][1], data.C42[1][2], '11.11.2005', 'C42')

student_с41 = Student(data.C41[1][0], data.C41[1][1], data.C41[1][2], '04.01.2005', 'C41', id = 100125, form = 'удаленная',)

student_с43 = Student(data.C43[1][0], data.C43[1][1], data.C43[1][2], '14.04.2005', 'C43', id = 100189)

def get_student(student: Student) -> Student:  
    """Функция получает экземпляр класса Student из списка студентов групп, хранящихся в базе университета (data)"""
    return student
     
     
teacher_head_fac = Teacher(data.Фундаменты[1][0], data.Фундаменты[1][1], data.Фундаменты[1][2], '01.12.1975', degree = 'доктор')

teacher_head_dep = Teacher(data.Архитектура[2][0], data.Архитектура[2][1], data.Архитектура[2][2], '19.12.1980')

teacher = Teacher(data.Строматериалы[3][0], data.Строматериалы[3][1], data.Строматериалы[3][2], '12.01.1990')

def get_teacher(teacher: Teacher) -> Teacher:  
    """Функция получает экземпляр класса Teacher из списка преподавателей кафедр, хранящихся в базе университета (data)"""
    return teacher


admin_head = Administrator(data.Административные_работники[7][0], data.Административные_работники[7][1], data.Административные_работники[7][2], '03.12.1978', income = 2000)

admin_worker = Administrator(data.Административные_работники[2][0], data.Административные_работники[2][1], data.Административные_работники[2][2], '23.12.1988', position = 'обслуживающий работник', head = admin_head)

admin_lab = Administrator(data.Административные_работники[3][0], data.Административные_работники[3][1], data.Административные_работники[3][2], '03.07.1991', income = 600, position = 'лаборант',head = teacher_head_dep)

def get_admin(admin: Administrator) -> Administrator:  
    """Функция получает экземпляр класса Administrator из списка Административных_работников, хранящихся в базе университета (data)"""
    return admin


record_c41 = GradeRecord('12.12.2023', teacher, scale = 4)
gradebook_c41 = Gradebook(student_с41, record_c41)

record_c42 = GradeRecord('13.12.2023', teacher_head_dep)
gradebook_c42 = Gradebook(student_chief_с42, record_c42)   

group = Group("C42", student_chief_с42, teacher)

def get_group(group: Group) -> Group:  
    """Функция получает экземпляр класса Group из списка студентов групп, хранящихся в базе университета (data)"""
    return group


room = Auditorium('11', 40, '5a')
room_2 = Auditorium('9', 30, '6a')

    
department_f = Department('Фундаменты', head = teacher_head_dep, auditoria = [room, room_2])

department_a = Department('Фундаменты', head = teacher_head_dep, teachers = [["Павлова", "Снежана", "Вениаминовна"], ["Баварин", "Владлен", "Елизарович"]])

def get_department(department: Department) -> Department:  
    """Функция получает экземпляр класса Department из списка учителей, хранящихся в базе университета (data)"""
    return department
    
    
faculty = Faculty('Строительный', head = teacher_head_fac)

university = University('УГНТУ', head = admin_head, contact = contact)

# TESTS:

# СТУДЕНТЫ:
# >>> student_chief_с42
# <ФИО:Сергеев П.М., ID = 100001, форма обучения: очная>
# >>> student_с41
# <ФИО:Зелинский Э.Ю., ID = 100125, форма обучения: удаленная>
# >>> student_с43
# <ФИО:Иванов И.И., ID = 100189, форма обучения: очная>

# УЧИТЕЛЯ
# >>> teacher_head_fac
# <ФИО:Аскаров Р.М. должность: учитель, ученая степень: доктор>
# >>> teacher_head_dep
# <ФИО:Кобелев Ю.А. должность: учитель, ученая степень: кандидат>
# >>> teacher
# <ФИО:Савасина А.С. должность: учитель, ученая степень: кандидат>

# АДМИНИСТРАТИВНЫЕ РАБОТНИКИ
# >>> admin_head
# <ФИО:Ековенко А.В. дата рождения: 1989-09-12 должность: административный работник, начальник: None>
# >>> admin_worker
# <ФИО:Жален А.Г. дата рождения: 1988-12-23 должность: обслуживающий работник, начальник: <ФИО:Ековенко А.В. дата рождения: 1989-09-12 должность: административный работник, начальник: None>>
# >>> admin_lab
# <ФИО:Винокурова Е.М. дата рождения: 1991-07-03 должность: лаборант, начальник: <ФИО:Кобелев Ю.А. должность: учитель, ученая степень: кандидат>>

# ОЦЕНКИ:
# >>> record_c41
# <семестр: - 1, дата экзамена: 2023-12-12, тип экзамена: зачёт, оценка: 4, преподаватель: <ФИО:Савасина А.С. должность: учитель, ученая степень: кандидат>>
# >>> gradebook_c41
# <студент: <ФИО:Зелинский Э.Ю., ID = 100125, форма обучения: удаленная>, экзамен: <семестр: - 1, дата экзамена: 2023-12-12, тип экзамена: зачёт, оценка: 4, преподаватель: <ФИО:Савасина А.С. должность: учитель, ученая степень: кандидат>>>
# >>> record_c42
# <семестр: - 1, дата экзамена: 2023-12-13, тип экзамена: зачёт, оценка: 5, преподаватель: <ФИО:Кобелев Ю.А. должность: учитель, ученая степень: кандидат>>

# ЗАЧЕТКИ:
# >>> gradebook_c42
# <студент: <ФИО:Сергеев П.М., ID = 100001, форма обучения: очная>, экзамен: <семестр: - 1, дата экзамена: 2023-12-13, тип экзамена: зачёт, оценка: 5, преподаватель: <ФИО:Кобелев Ю.А. должность: учитель, ученая степень: кандидат>>>

# ГРУППА:
# >>> group
# <группа: C42, куратор: <ФИО:Савасина А.С. должность: учитель, ученая степень: кандидат>, староста: <ФИО:Сергеев П.М., ID = 100001, форма обучения: очная>, список студентов: [['Васильева', 'Татьяна', 'Андреевна'], ['Сергеев', 'Петр', 'Михайлович'], ['Юдинцев', 'Антон', 'Валерьевич'], ['Иванисова', 'Ирина', 'Петровна'], ['Карпова', 'Людмила', 'Анатольевна'], ['Морозова', 'Анна', 'Владимировна']]>

# АУДИТОРИИ:
# >>> room
# <аудитория: 11, количество мест: 40, строение: 5a>
# >>> room_2
# <аудитория: 9, количество мест: 30, строение: 6a>

# КАФЕДРЫ:
# >>> department_f
# <кафедра: Фундаменты, преподаватели: [['Гайфуллина', 'Алина', 'Ильдусовна'], ['Аскаров', 'Рамазан', 'Маратович'], ['Валлиулин', 'Тимур', 'Марселевич'], ['Исламова', 'Алина', 'Тимуровна']], кабинеты: [<аудитория: 11, количество мест: 40, строение: 5a>, <аудитория: 9, количество мест: 30, строение: 6a>]>
# >>> department_a
# <кафедра: Фундаменты, преподаватели: [['Павлова', 'Снежана', 'Вениаминовна'], ['Баварин', 'Владлен', 'Елизарович']], кабинеты: []>

# ФАКУЛЬТЕТ:
# >>> faculty
# <факультет Строительный, декан: <ФИО:Аскаров Р.М. должность: учитель, ученая степень: доктор>>

# УНИВЕРСИТЕТ
# <название университета: УГНТУ, ректор: <ФИО:Ековенко А.В. дата рождения: 1978-12-03 должность: административный работник, начальник: None>, контакты: Contact(mobile='2299100', office='Космонавтов2А', email='main@ugntu.ru', web=None, telegram=None)>